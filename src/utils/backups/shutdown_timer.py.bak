#!/usr/bin/env python3
# src/utils/shutdown_timer.py

import tkinter as tk
from tkinter import messagebox
import subprocess
import threading
import time

shutdown_thread = None
shutdown_canceled = False

def shutdown_system():
    global shutdown_canceled
    if not shutdown_canceled:
        subprocess.run(['sudo', 'poweroff'])

def start_shutdown_timer(seconds):
    global shutdown_thread, shutdown_canceled
    shutdown_canceled = False

    def countdown():
        nonlocal seconds
        for remaining in range(seconds, 0, -1):
            if shutdown_canceled:
                return
            root.after(0, update_label, remaining)
            time.sleep(1)
        root.after(0, root.quit)  # Quit the Tkinter mainloop
        shutdown_system()

    def update_label(remaining):
        time_label.config(text=f"Shutting down in {remaining} seconds...")

    def cancel_shutdown():
        global shutdown_canceled
        shutdown_canceled = True
        root.quit()

    root = tk.Tk()
    root.title("Shutdown Timer")
    root.geometry("300x100")
    time_label = tk.Label(root, text=f"Shutting down in {seconds} seconds...")
    time_label.pack(pady=10)
    cancel_button = tk.Button(root, text="Cancel", command=cancel_shutdown)
    cancel_button.pack(pady=10)

    shutdown_thread = threading.Thread(target=countdown)
    shutdown_thread.start()

    root.mainloop()
    root.destroy()
